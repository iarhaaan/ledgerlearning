import type { Chapter } from '../../../types';

export const CHAPTER_6_DATABASE_OPERATIONS: Chapter = {
  id: 'ch6',
  title: '6. Database Operations',
  lessons: [
    {
        id: 'l5-1',
        title: 'Open SQL and Native SQL',
        duration: 10,
        details: {
            tCode: 'N/A',
            sproPath: 'N/A',
            definition: 'Open SQL is a subset of standard SQL that is integrated into the ABAP language. It is database-independent. Native SQL allows you to write database-specific code, but this is rarely used.',
            purpose: 'Open SQL allows developers to write data access code that will work on any database that SAP supports (HANA, Oracle, etc.). The ABAP runtime environment translates the Open SQL into the specific SQL dialect of the underlying database.',
            configurationSteps: [],
            integrationNotes: 'For almost all business application development, you should exclusively use Open SQL to ensure portability and stability.',
            updatesS4HANA: 'Open SQL has been significantly enhanced in S/4HANA to take advantage of the power of the HANA database. It now supports complex expressions, aggregations, and other features directly within the SELECT statement.',
        },
    },
    {
        id: 'l5-2',
        title: 'Internal Tables',
        duration: 20,
        details: {
            tCode: 'SE38',
            sproPath: 'N/A',
            definition: 'An Internal Table is a temporary table that exists only during the runtime of a program. It is a fundamental data structure in ABAP used to hold and process sets of data.',
            purpose: 'To hold the results of a database query in memory so that the program can process the data line by line.',
            configurationSteps: [
                'Declaration:',
                '`DATA gt_flights TYPE TABLE OF sflight.` (Declares an internal table with the same structure as the `sflight` database table).',
                '<br/>',
                'Reading data into it:',
                '`SELECT * FROM sflight INTO TABLE @gt_flights.`',
                '<br/>',
                'Processing it:',
                '`LOOP AT gt_flights INTO DATA(gs_flight).`',
                '`  WRITE: gs_flight-carrid, gs_flight-connid.`',
                '`ENDLOOP.`',
            ],
            integrationNotes: 'Internal tables are crucial for performance. You should read data from the database into an internal table once, and then process the internal table, rather than reading from the database inside a loop.',
            updatesS4HANA: 'Internal tables are still fundamental. Modern ABAP provides many new ways to work with them, including filter operations and table comprehensions.',
        },
    },
    {
        id: 'l5-3',
        title: 'SELECT Statement',
        duration: 20,
        details: {
            tCode: 'SE38',
            sproPath: 'N/A',
            definition: 'The `SELECT` statement is the core Open SQL command used to read data from one or more database tables.',
            purpose: 'To retrieve data from the database based on specified conditions.',
            configurationSteps: [
                'Select specific columns into an internal table:',
                '`SELECT carrid, connid, fldate FROM sflight INTO TABLE @DATA(gt_flights) WHERE carrid = \'LH\'.`',
                '<br/>',
                'Select a single row:',
                '`SELECT SINGLE * FROM spfli INTO @DATA(gs_flight) WHERE carrid = \'AA\' AND connid = \'0017\'.`',
                '<br/>',
                'Always check the return code:',
                '`IF sy-subrc = 0.`',
                '`  " Success`',
                '`ELSE.`',
                '`  " Not found`',
                '`ENDIF.`',
            ],
            integrationNotes: 'The `WHERE` clause is critical for performance. Always try to select data based on the primary key or an index of the database table.',
            updatesS4HANA: 'The S/4HANA SELECT statement is much more powerful. You can now use aggregate functions (SUM, COUNT), CASE statements, and calculations directly in the field list, pushing more logic down to the database.',
        },
    },
    {
        id: 'l5-4',
        title: 'INSERT, UPDATE, DELETE',
        duration: 15,
        details: {
            tCode: 'SE38',
            sproPath: 'N/A',
            definition: 'These are the Open SQL statements used to modify data in the database.',
            purpose: '`INSERT` adds new rows, `UPDATE` changes existing rows, and `DELETE` removes rows from a database table.',
            configurationSteps: [
                '<b>INSERT:</b> `INSERT zmy_table FROM @gs_data.` (Inserts one row from a structure).',
                '`INSERT zmy_table FROM TABLE @gt_data.` (Inserts multiple rows from an internal table).',
                '<br/>',
                '<b>UPDATE:</b> `UPDATE zmy_table SET field1 = @lv_value WHERE key = @lv_key.`',
                '<br/>',
                '<b>DELETE:</b> `DELETE FROM zmy_table WHERE key = @lv_key.`',
            ],
            integrationNotes: 'You should never use these commands on standard SAP tables unless you are absolutely sure what you are doing. Modifying standard tables directly can lead to severe data inconsistencies. Use BAPIs or other standard APIs instead.',
            updatesS4HANA: 'The syntax for these statements is largely unchanged.',
        },
    },
    {
        id: 'l5-5',
        title: 'Database Joins',
        duration: 20,
        details: {
            tCode: 'SE38',
            sproPath: 'N/A',
            definition: 'A JOIN is used to combine rows from two or more tables based on a related column between them.',
            purpose: 'To retrieve related data from multiple tables in a single `SELECT` statement, which is much more efficient than selecting from each table separately and combining the data in your program.',
            configurationSteps: [
                'Example of an INNER JOIN:',
                '`SELECT spfli~carrid, spfli~connid, sflight~fldate`',
                '`  FROM spfli`',
                '`  INNER JOIN sflight ON spfli~carrid = sflight~carrid AND spfli~connid = sflight~connid`',
                '`  INTO TABLE @DATA(gt_flights)`',
                '`  WHERE spfli~cityfrom = \'NEW YORK\'.`',
            ],
            integrationNotes: 'Other join types include LEFT OUTER JOIN. The join conditions are specified in the `ON` clause.',
            updatesS4HANA: 'Joins are a fundamental part of Open SQL and are heavily used in modern ABAP development, especially within CDS Views to create powerful data models.',
        },
    },
  ],
  quiz: {
    id: 'abap-q6',
    title: 'Database Operations Quiz',
    questions: [
      { question: 'What is the primary benefit of using Open SQL?', options: ['It is faster than Native SQL', 'It is database-independent', 'It can only be used on HANA'], correctAnswer: 1 },
      { question: 'What is an Internal Table?', options: ['A permanent database table', 'A temporary table in program memory to hold data', 'A type of database view'], correctAnswer: 1 },
      { question: 'What is the most common statement to process an internal table row by row?', options: ['DO...ENDDO', 'WHILE...ENDWHILE', 'LOOP AT...ENDLOOP'], correctAnswer: 2 },
      { question: 'What should you use to modify data in standard SAP tables?', options: ['INSERT, UPDATE, DELETE directly', 'BAPIs or other standard APIs', 'There is no way to modify them'], correctAnswer: 1 },
    ]
  }
};
